program
  prototype
    TOK_DECLID ()
      basetype
        void
      TOK_IDENT (__assert_fail)
    TOK_PARAMLIST (()
      TOK_DECLID ()
        basetype
          TOK_STRING (string)
        TOK_IDENT (expr)
      TOK_DECLID ()
        basetype
          TOK_STRING (string)
        TOK_IDENT (file)
      TOK_DECLID ()
        basetype
          TOK_INT (int)
        TOK_IDENT (line)
    ';' (;)
  prototype
    TOK_DECLID ()
      basetype
        void
      TOK_IDENT (putb)
    TOK_PARAMLIST (()
      TOK_DECLID ()
        basetype
          TOK_BOOL (bool)
        TOK_IDENT (b)
    ';' (;)
  prototype
    TOK_DECLID ()
      basetype
        void
      TOK_IDENT (putc)
    TOK_PARAMLIST (()
      TOK_DECLID ()
        basetype
          TOK_CHAR (char)
        TOK_IDENT (c)
    ';' (;)
  prototype
    TOK_DECLID ()
      basetype
        void
      TOK_IDENT (puti)
    TOK_PARAMLIST (()
      TOK_DECLID ()
        basetype
          TOK_INT (int)
        TOK_IDENT (i)
    ';' (;)
  prototype
    TOK_DECLID ()
      basetype
        void
      TOK_IDENT (puts)
    TOK_PARAMLIST (()
      TOK_DECLID ()
        basetype
          TOK_STRING (string)
        TOK_IDENT (s)
    ';' (;)
  prototype
    TOK_DECLID ()
      basetype
        void
      TOK_IDENT (endl)
    ';' (;)
  prototype
    TOK_DECLID ()
      basetype
        TOK_INT (int)
      TOK_IDENT (getc)
    ';' (;)
  prototype
    TOK_DECLID ()
      basetype
        TOK_STRING (string)
      TOK_IDENT (getw)
    ';' (;)
  prototype
    TOK_DECLID ()
      basetype
        TOK_STRING (string)
      TOK_IDENT (getln)
    ';' (;)
  prototype
    TOK_DECLID ()
      basetype
        TOK_STRING (string)
      array
      TOK_IDENT (getargv)
    ';' (;)
  prototype
    TOK_DECLID ()
      basetype
        void
      TOK_IDENT (exit)
    TOK_PARAMLIST (()
      TOK_DECLID ()
        basetype
          TOK_INT (int)
        TOK_IDENT (status)
    ';' (;)
  TOK_FUNCTION ()
    TOK_DECLID ()
      basetype
        TOK_INT (int)
      TOK_IDENT (fac)
    TOK_PARAMLIST (()
      TOK_DECLID ()
        basetype
          TOK_INT (int)
        TOK_IDENT (n)
    block
      vardecl
        basetype
          TOK_INT (int)
        TOK_IDENT (f)
        constant
          TOK_INTCON (1)
      while
        binop
          variable
            TOK_IDENT (n)
          TOK_GT (>)
          constant
            TOK_INTCON (1)
        block
          binop
            variable
              TOK_IDENT (f)
            '=' (=)
            binop
              variable
                TOK_IDENT (f)
              '*' (*)
              variable
                TOK_IDENT (n)
          binop
            variable
              TOK_IDENT (n)
            '=' (=)
            binop
              variable
                TOK_IDENT (n)
              '-' (-)
              constant
                TOK_INTCON (1)
      TOK_RETURN (return)
        variable
          TOK_IDENT (f)
  vardecl
    basetype
      TOK_INT (int)
    TOK_IDENT (n)
    constant
      TOK_INTCON (1)
  while
    binop
      variable
        TOK_IDENT (n)
      TOK_LE (<=)
      constant
        TOK_INTCON (5)
    block
      vardecl
        basetype
          TOK_INT (int)
        TOK_IDENT (b)
        constant
          TOK_INTCON (5)
      TOK_IFELSE (if)
        binop
          variable
            TOK_IDENT (b)
          TOK_GT (>)
          constant
            TOK_INTCON (2)
        block
          vardecl
            basetype
              TOK_INT (int)
            TOK_IDENT (w)
            constant
              TOK_INTCON (22)
        block
          vardecl
            basetype
              TOK_INT (int)
            TOK_IDENT (v)
            constant
              TOK_INTCON (33)
      call
        TOK_IDENT (puti)
        call
          TOK_IDENT (fac)
          variable
            TOK_IDENT (n)
      call
        TOK_IDENT (endl)
      binop
        variable
          TOK_IDENT (n)
        '=' (=)
        binop
          variable
            TOK_IDENT (n)
          '+' (+)
          constant
            TOK_INTCON (1)
